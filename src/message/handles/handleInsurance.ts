import { Client } from '@line/bot-sdk';
import { replyText, replyFlex } from '../functions/replyFunction';
import { getButtonOptionsFlexContent } from '../functions/flexMessage';
import { getLicensePlateList } from '../functions/getLicensePlateList';

const options = ['‡∏ã‡∏∑‡πâ‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô', '‡∏ï‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô']

export async function handleInsurance(
    client: Client,
    replyToken: string,
    item: string
): Promise<void> {
    switch (item) {
        case '‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô': {
            const plates = await getLicensePlateList();

            const flex = getButtonOptionsFlexContent(
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å\n‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö',
                plates.map((plate) => ({
                    label: plate,
                    postbackData: `action=checkLicenseNum&plate=${encodeURIComponent(plate)}`,
                }))
            );

            await replyFlex(client, replyToken, flex);
            return;
        }

        case '‡∏ï‡πà‡∏≠‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô': {
            const plates = await getLicensePlateList();

            const flex = getButtonOptionsFlexContent(
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å\n‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö',
                plates.map((plate) => ({
                    label: plate,
                    postbackData: `action=renewLicense&plate=${encodeURIComponent(plate)}`,
                }))
            );

            await replyFlex(client, replyToken, flex);
            return;
        }

        case '‡∏ï‡πà‡∏≠‡∏û‡∏£‡∏ö.': {
            const plates = await getLicensePlateList();

            const flex = getButtonOptionsFlexContent(
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å\n‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö',
                plates.map((plate) => ({
                    label: plate,
                    postbackData: `action=renewInsurance&plate=${encodeURIComponent(plate)}`,
                }))
            );

            await replyFlex(client, replyToken, flex);
            return;
        }
        case '‡∏ã‡∏∑‡πâ‡∏≠/‡∏ï‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô': {

            const flex = getButtonOptionsFlexContent(
                '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å\n‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£',
                options.map((label) => ({
                    label,
                    postbackData: `action=renewOrBuyInsurance&item=${encodeURIComponent(label)}`
                }))
            );
            await replyFlex(client, replyToken, flex);
            return;
        }

        default: {
            await client.replyMessage(replyToken, {
                type: 'text',
                text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ üò¢',
            });
            return;
        }
    }
}

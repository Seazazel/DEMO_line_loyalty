import { Client, TextMessage } from '@line/bot-sdk';
import { getLocationRequestFlex } from '../functions/flexMessage';

export async function handleServiceCenter(
  client: Client,
  replyToken: string,
  item: string
) {
  switch (item) {
    case '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏Å‡∏•‡πâ‡∏â‡∏±‡∏ô':
    case '‡∏ï‡∏£‡∏≠. ‡πÉ‡∏Å‡∏•‡πâ‡∏â‡∏±‡∏ô': {
      const textMsg: TextMessage = {
        type: 'text',
        text: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£: ${item}`,
      };
      const flexMsg = getLocationRequestFlex();
      await client.replyMessage(replyToken, [textMsg, flexMsg]);
      return;
    }

    case '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£':
      await client.replyMessage(replyToken, {
        type: 'text',
        text: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£: ${item}`,
      });
      return;

    default:
      await client.replyMessage(replyToken, {
        type: 'text',
        text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ üò¢',
      });
      return;
  }
}

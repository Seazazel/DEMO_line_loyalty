import { Client } from '@line/bot-sdk';
import { replyText } from '../functions/replyFunction';
import { HotspotService } from 'src/hotspot/hotspot.service';


export async function handleOther(
  client: Client,
  replyToken: string,
  item: string,
  message: string,
  userId: string,
  destination: string,
  hotspotService: HotspotService 
): Promise<void> {
  switch (item) {
    case '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠': {
      await replyText(client, replyToken, '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: https://www.greenwing.co.th/greenwingrn');
      return;
    }

    case '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô': {
      await replyText(client, replyToken, '‡∏Ñ‡∏•‡∏¥‡∏Å‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà: https://www.greenwing.co.th/career');
      return;
    }

    case '‡∏Ç‡∏≠‡∏£‡∏´‡∏±‡∏™ wi-fi':{
        await hotspotService.handleWifiRequest(userId, destination, client, replyToken);
        return;
    }
    case '‡∏≠‡∏∑‡πà‡∏ô‡πÜ': {
      await client.replyMessage(replyToken, {
        type: 'text',
        text: `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£: ${item}`,
      });
      return;
    }

    default: {
      await client.replyMessage(replyToken, {
        type: 'text',
        text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ üò¢',
      });
      return;
    }
  }
}

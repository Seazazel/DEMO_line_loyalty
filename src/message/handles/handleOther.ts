import { Client } from '@line/bot-sdk';
import { replyText} from '../functions/replyFunction';
import { HotspotService } from 'src/hotspot/hotspot.service';
import { BASE_URL } from 'config/baseUrl.config';


export async function handleOther(
  client: Client,
  replyToken: string,
  item: string,
  message: string,
  userId: string,
  destination: string,
  hotspotService: HotspotService 
): Promise<void> {
  switch (item) {
    case '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠': {
      await replyText(client, replyToken, '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: https://www.greenwing.co.th/greenwingrn');
      return;
    }

    case '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô': {
      await replyText(client, replyToken, '‡∏Ñ‡∏•‡∏¥‡∏Å‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà: https://www.greenwing.co.th/career');
      return;
    }

    case '‡∏Ç‡∏≠‡∏£‡∏´‡∏±‡∏™ wi-fi':{
        await hotspotService.handleWifiRequest(userId, destination, client, replyToken);
        return;
    }
    
case '‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡πÄ‡∏á‡∏¥‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏î‡πá‡∏Å‡πÜ': {
  await client.replyMessage(replyToken, [
    {
      type: 'image',
      originalContentUrl: `${BASE_URL}/assets/images/donate2.png`,
      previewImageUrl: `${BASE_URL}/assets/images/donate2.png`,
    },
    {
      type: 'image',
      originalContentUrl: `${BASE_URL}/assets/images/donate1.png`,
      previewImageUrl: `${BASE_URL}/assets/images/donate1.png`,
    },
  ]);
  return;
}

    case '‡∏≠‡∏∑‡πà‡∏ô‡πÜ': {
      await client.replyMessage(replyToken, {
        type: 'text',
        text: `‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ xxx-xxxxxxxx`, 
      });
      return;
    }

    default: {
      await client.replyMessage(replyToken, {
        type: 'text',
        text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ üò¢',
      });
      return;
    }
  }
}
